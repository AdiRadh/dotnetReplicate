/*
 * Replicate HTTP API
 *
 * A web service for running Replicate models
 *
 * The version of the OpenAPI document: 1.0.0-a1
 * Contact: team@replicate.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = dotnetReplicate.Client.OpenAPIDateConverter;

namespace dotnetReplicate.Model
{
    /// <summary>
    /// DeploymentsGet200ResponseCurrentRelease
    /// </summary>
    [DataContract(Name = "deployments_get_200_response_current_release")]
    public partial class CurrentRelease : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CurrentRelease" /> class.
        /// </summary>
        /// <param name="varConfiguration">varConfiguration.</param>
        /// <param name="createdAt">The time the release was created..</param>
        /// <param name="createdBy">createdBy.</param>
        /// <param name="model">The model identifier string in the format of &#x60;{model_owner}/{model_name}&#x60;..</param>
        /// <param name="number">The release number..</param>
        /// <param name="varVersion">The ID of the model version used in the release..</param>
        public CurrentRelease(Configuration varConfiguration = default(Configuration), DateTime createdAt = default(DateTime), CreatedBy createdBy = default(CreatedBy), string model = default(string), int number = default(int), string varVersion = default(string))
        {
            this.VarConfiguration = varConfiguration;
            this.CreatedAt = createdAt;
            this.CreatedBy = createdBy;
            this.Model = model;
            this.Number = number;
            this.VarVersion = varVersion;
        }

        /// <summary>
        /// Gets or Sets VarConfiguration
        /// </summary>
        [DataMember(Name = "configuration", EmitDefaultValue = false)]
        public Configuration VarConfiguration { get; set; }

        /// <summary>
        /// The time the release was created.
        /// </summary>
        /// <value>The time the release was created.</value>
        [DataMember(Name = "created_at", EmitDefaultValue = false)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        [DataMember(Name = "created_by", EmitDefaultValue = false)]
        public CreatedBy CreatedBy { get; set; }

        /// <summary>
        /// The model identifier string in the format of &#x60;{model_owner}/{model_name}&#x60;.
        /// </summary>
        /// <value>The model identifier string in the format of &#x60;{model_owner}/{model_name}&#x60;.</value>
        [DataMember(Name = "model", EmitDefaultValue = false)]
        public string Model { get; set; }

        /// <summary>
        /// The release number.
        /// </summary>
        /// <value>The release number.</value>
        [DataMember(Name = "number", EmitDefaultValue = false)]
        public int Number { get; set; }

        /// <summary>
        /// The ID of the model version used in the release.
        /// </summary>
        /// <value>The ID of the model version used in the release.</value>
        [DataMember(Name = "version", EmitDefaultValue = false)]
        public string VarVersion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DeploymentsGet200ResponseCurrentRelease {\n");
            sb.Append("  VarConfiguration: ").Append(VarConfiguration).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  Model: ").Append(Model).Append("\n");
            sb.Append("  Number: ").Append(Number).Append("\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
